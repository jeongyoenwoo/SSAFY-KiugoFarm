jwt:
  secretKey: jfdashlghiopewrgjweirquyptih4554dfkjhertiuyasdf
  access:
    header: Access
    expiration: 1800000000
  refresh:
    header: Refresh
    expiration: 604800

spring:
  datasource:
    url: jdbc:mysql://j10b303.p.ssafy.io:3306/member?serverTimezone=Asia/Seoul
    username: root
    password: ssafy
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      pool-name: jpa-hikari-pool
      maximum-pool-size: 20
      jdbc-url: ${spring.datasource.url}
      username: ${spring.datasource.username}
      password: ${spring.datasource.password}
      driver-class-name: ${spring.datasource.driver-class-name}
      data-source-properties:
        rewriteBatchedStatements: true

  jpa:
    show-sql: true # JPA가 생성하는 SQL을 콘솔에 출력
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true # SQL 포맷을 보기 좋게 출력
        open-in-view: false # Open-Session-In-View 패턴을 비활성화 (성능 및 관리 측면에서 권장)


  security:
    oauth2:
      client:
        registration:
          google:
            clientId: client id input
            clientSecret: client secret input
            scope:
              - email
              - profile
          naver:
            clientId: client id input
            clientSecret: client secret input
            clientAuthenticationMethod: post
            authorizationGrantType: authorization_code
            redirectUri: "http://localhost:8080/{action}/oauth2/code/{registrationId}"
            scope:
              - nickname
              - email
              - profile_image
            clientName: Naver
          kakao:
            clientId: 20dc23e573cbebb6e44b57c46021b332
            clientAuthenticationMethod: client_secret_post
            authorizationGrantType: authorization_code
            redirectUri: "http://j10b303.p.ssafy.io:8080/{action}/oauth2/code/{registrationId}"
            scope:
              - profile_nickname
              - profile_image
              - account_email
            clientName: Kakao
        provider:
          naver:
            authorizationUri: https://nid.naver.com/oauth2.0/authorize
            tokenUri: https://nid.naver.com/oauth2.0/token
            userInfoUri: https://openapi.naver.com/v1/nid/me
            userNameAttribute: response
          kakao:
            authorizationUri: https://kauth.kakao.com/oauth/authorize
            tokenUri: https://kauth.kakao.com/oauth/token
            userInfoUri: https://kapi.kakao.com/v2/user/me
            userNameAttribute: id


#mybatis:
#  mapper-locations: classpath:/mapper/**/*.xml
